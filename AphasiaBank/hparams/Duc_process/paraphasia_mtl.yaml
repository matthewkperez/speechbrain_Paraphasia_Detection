# ################################
# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# Taken from Librispeech recipe
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made`
seed: 2000
lr: 0.09
lr_wav2vec: 1.e-4
number_of_epochs: 10
# w2v_model: wav2vec2-large-xlsr-53
# w2v_model: wav2vec2-large-960h-lv60-self
# w2v_model: hubert-large-ls960-ft
# w2v_model: whisper-large-v2
w2v_model: wavlm-large
freeze_wav2vec: True
paraphasia_var: pn # pn, p, n
freeze_feature_extractor_wav2vec: True # procs when freeze_wav2vec = False, only retrain transformers
__set_seed: !apply:torch.manual_seed [!ref <seed>]
# output_folder: !ref results/mtl_paraphasia/No-LM/<w2v_model>/seq-RNN-CTC_<lr>/<paraphasia_var>
output_folder: !ref results/mtl_paraphasia/No-LM/<w2v_model>/ASR-base
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
# data_dir: /z/mkperez/speechbrain/AphasiaBank/data/Duc_process/mtl_paraphasia
data_dir: /z/mkperez/speechbrain/AphasiaBank/data/no_paraphasia/mtl_paraphasia
data_folder: !ref <data_dir>
para_flag: False #paraphasia learning

# URL for the biggest Fairseq english wav2vec2 model.
# wav2vec2_hub: !ref facebook/<w2v_model>
# wav2vec2_hub: !ref openai/<w2v_model>
wav2vec2_hub: !ref microsoft/<w2v_model>


# Data files
train_splits: ["train"]
dev_splits: ["dev"]
test_splits: ["test"]
skip_prep: False
ckpt_interval_minutes: 25 # save checkpoint every N min
train_csv: !ref <data_dir>/train.csv
valid_csv: !ref <data_dir>/dev.csv
test_csv: !ref <data_dir>/test.csv



# Training parameters
sorting: ascending
auto_mix_prec: False
sample_rate: 16000
max_length: 10 # change to 20
min_length: 0.5
max_sev_train: 4
min_sev_train: -1
batch_size: 24 # 32,3
test_batch_size: 1 # 32,3
grad_accumulation_factor: 4 #4,16

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>

valid_dataloader_opts:
   batch_size: !ref <batch_size>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>

# Model parameters
activation: !name:torch.nn.LeakyReLU
dnn_layers: 2
dnn_neurons: 1024 # 1024

# Outputs 28 = tokenizer for greedy CTC 
output_neurons: 28  # BPE size, index(blank/eos/bos) = 0
paraphasia_out: 3 # C, n, p <blank>

# Decoding parameters
blank_index: 0

#
# Functions and classes
#
# epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
#    limit: !ref <number_of_epochs>
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounterWithStopper
   limit: !ref <number_of_epochs>
   limit_to_stop: 3
   limit_warmup: 5
   direction: "min"

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [80, 90, 95, 100, 105, 110, 120]
# augmentation: !new:speechbrain.lobes.augment.SpecAugment


enc: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
   input_shape: [null, null, 1024] # neurons must match that of model
   activation: !ref <activation>
   dnn_blocks: !ref <dnn_layers>
   dnn_neurons: !ref <dnn_neurons>

# para_enc: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
#    input_shape: [null, null, 1024] # neurons must match that of model
#    activation: !ref <activation>
#    dnn_blocks: !ref <dnn_layers>
#    dnn_neurons: !ref <dnn_neurons>

para_enc: !new:speechbrain.nnet.RNN.RNN
   input_shape: [null, null, 1024]
   hidden_size: !ref <dnn_neurons>
   num_layers: 2
   bidirectional: False


# para_enc: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR
#    tgt_vocab: 4
#    input_size: 1024
#    d_model: 1024



wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
   source: !ref <wav2vec2_hub>
   output_norm: True
   freeze: !ref <freeze_wav2vec>
   freeze_feature_extractor: !ref <freeze_feature_extractor_wav2vec>
   save_path: !ref <save_folder>/wav2vec2_checkpoint



ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <dnn_neurons>
   n_neurons: !ref <output_neurons>

para_lin: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <dnn_neurons>
   n_neurons: !ref <paraphasia_out>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

bce_loss: !name:speechbrain.nnet.losses.bce_loss

modules:
   wav2vec2: !ref <wav2vec2>
   enc: !ref <enc>
   ctc_lin: !ref <ctc_lin>
   para_enc: !ref <para_enc>
   para_lin: !ref <para_lin>

model: !new:torch.nn.ModuleList
   - [!ref <enc>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.Adadelta
   lr: !ref <lr>
   rho: 0.95
   eps: 1.e-8

wav2vec_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_wav2vec>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_wav2vec>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

label_encoder: !new:speechbrain.dataio.encoder.CTCTextEncoder

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      wav2vec2: !ref <wav2vec2>
      model: !ref <model>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_wav2vec: !ref <lr_annealing_wav2vec>
      counter: !ref <epoch_counter>
      tokenizer: !ref <label_encoder>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True

pwer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats